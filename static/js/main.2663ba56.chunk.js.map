{"version":3,"sources":["form-group/FormGroup.js","form-field/FormField.js","form-check/FormCheck.js","App.js","index.js"],"names":["FormGroup","state","errors","_this","props","groupName","valid","value","setFormFieldValues","formFieldEventHandler","formState","evtType","setState","prevState","updatedState","updatedFormGroupState","onBlur","onChange","submitHandler","evt","preventDefault","onSubmit","error","this","children","forEach","child","type","name","fieldName","Object","objectSpread","defineProperty","checkFormGroupValidity","_this2","addPropsToChildren","React","Children","map","cloneElement","onBlurGroup","onChangeGroup","react_default","a","createElement","style","Component","FormField","disabled","touched","formCheck","inputBlurHandler","newState","updatedFormFieldState","inputChangeHandler","_this$props","_this$state","length","hasError","checkValidity","startingState","invalid","validator","target","FormCheck","test","max","actual","maxLength","min","minLength","regex","trim","App","group","email","password","formFieldChangeHandler","field","formGroupChangeHandler","formSubmitHandler","alert","concat","optionToggleHandler","subfield","object","el","push","className","key","String","displayObjectFields","emailError","passwordError","textAlign","margin","form_group_FormGroup","display","flexDirection","padding","marginLeft","form_field_FormField","required","fieldErrors","onClick","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2663ba56.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n/*\n * FormGroup Wrapper Component\n */\nclass FormGroup extends Component {\n  state = {\n    errors: this.props.errors || false,\n    groupName: this.props.groupName,\n    valid: this.props.valid || false,\n    value: this.setFormFieldValues()\n  };\n\n  /**\n   * @description checks if any form fields have an error\n   * @param {boolean | object} errors boolean | object\n   * @returns boolean\n   */\n  checkFormGroupValidity(errors) {\n    let valid = true;\n    for (const error in errors) {\n      if (!!errors[error]) valid = false;\n    }\n    return valid;\n  }\n\n  /**\n   * @description updates form group state on form field blur event\n   * @param {object} formState object\n   */\n  formFieldEventHandler = (formState, evtType) => {\n    this.setState(prevState => {\n      const updatedState = this.updatedFormGroupState(prevState, formState);\n      if (evtType === 'blur' && this.props.onBlur)\n        this.props.onBlur(updatedState);\n      if (evtType === 'change' && this.props.onChange)\n        this.props.onChange(updatedState);\n      return updatedState;\n    });\n  };\n\n  /**\n   * @description sets group form value object to values passed on form fields\n   * @returns value object\n   */\n  setFormFieldValues() {\n    const value = {};\n    this.props.children.forEach(child => {\n      if (child && child.type.name === 'FormField') {\n        child.props.value\n          ? (value[child.props.fieldName] = child.props.value)\n          : (value[child.props.fieldName] = '');\n      }\n    });\n    return value;\n  }\n\n  submitHandler = (evt, formState) => {\n    evt.preventDefault();\n    if (this.props.onSubmit) this.props.onSubmit(formState);\n  };\n\n  /**\n   * @description updates form group state passed on updated form field state\n   * @param {object} prevState object\n   * @param {object} formState object\n   * @returns updatedState object\n   */\n  updatedFormGroupState(prevState, formState) {\n    const errors = {\n      ...prevState.errors,\n      [formState.fieldName]: formState.errors\n    };\n    return {\n      ...prevState,\n      errors: errors,\n      valid: this.checkFormGroupValidity(errors),\n      value: { ...prevState.value, [formState.fieldName]: formState.value }\n    };\n  }\n\n  render() {\n    const addPropsToChildren = React.Children.map(\n      this.props.children,\n      child => {\n        if (child && child.type.name === 'FormField') {\n          return React.cloneElement(child, {\n            onBlurGroup: this.formFieldEventHandler,\n            onChangeGroup: this.formFieldEventHandler\n          });\n        } else {\n          return child;\n        }\n      }\n    );\n    return (\n      <form\n        style={this.props.style}\n        onSubmit={evt => this.submitHandler(evt, this.state)}\n      >\n        {addPropsToChildren}\n      </form>\n    );\n  }\n}\n\nexport default FormGroup;\n","import React, { Component } from 'react';\n\n/*\n * FormField Wrapper Component\n */\nclass FormField extends Component {\n  state = {\n    disabled: this.props.disabled || false,\n    errors: this.props.errors || false,\n    fieldName: this.props.fieldName,\n    touched: this.props.touched || false,\n    value: this.props.value || '',\n    valid: this.props.valid || false,\n    formCheck: this.props.formCheck || []\n  };\n\n  componentDidMount() {\n    const { onBlur, onChange, onBlurGroup, onChangeGroup } = this.props;\n    const { formCheck, value } = this.state;\n    if (formCheck.length) {\n      const hasError = this.checkValidity(formCheck, value);\n\n      const startingState = {\n        ...this.state,\n        errors: hasError,\n        valid: !hasError\n      };\n\n      if (onBlur) onBlur(startingState);\n      if (onChange) onChange(startingState);\n      if (onChangeGroup) onChangeGroup(startingState, 'change');\n      if (onBlurGroup) onBlurGroup(startingState, 'blur');\n    }\n  }\n\n  /**\n   * @description runs input value through each FormCheck to check validity\n   * @param {FormCheck[]} formCheck FormCheck[]\n   * @param {*} value any\n   * @returns boolean | object\n   */\n  checkValidity(formCheck, value) {\n    if (formCheck.length) {\n      let invalid = false;\n      const errors = {};\n\n      formCheck.forEach(validator => {\n        const hasError = validator(value);\n\n        if (hasError) {\n          invalid = true;\n          errors[hasError[0]] = hasError[1];\n        }\n      });\n      return !invalid ? false : errors;\n    }\n    return false;\n  }\n\n  /**\n   * @description  updates state on input blur and calls onBlur callback\n   * @param {event} evt event\n   */\n  inputBlurHandler = evt => {\n    const newState = this.updatedFormFieldState(evt);\n    if (this.props.onBlur) this.props.onBlur(newState);\n    if (this.props.onBlurGroup) this.props.onBlurGroup(newState, 'blur');\n    this.setState(newState);\n  };\n\n  /**\n   * @description  updates state on input change and calls onChange callback\n   * @param {event} evt event\n   */\n  inputChangeHandler = evt => {\n    const newState = this.updatedFormFieldState(evt);\n    if (this.props.onChange) this.props.onChange(newState);\n    if (this.props.onChangeGroup) this.props.onChangeGroup(newState, 'change');\n    this.setState(newState);\n  };\n\n  /**\n   * @description runs checkValidity on target value and creates an updated state object\n   * @param {event} evt event\n   */\n  updatedFormFieldState(evt) {\n    const hasError = this.checkValidity(this.state.formCheck, evt.target.value);\n    const newState = {\n      ...this.state,\n      errors: hasError,\n      touched: true,\n      valid: !hasError,\n      value: evt.target.value\n    };\n    return newState;\n  }\n\n  render() {\n    return (\n      <input\n        disabled={this.props.disabled}\n        style={this.props.style}\n        type={this.props.type}\n        value={this.state.value}\n        onBlur={evt => this.inputBlurHandler(evt)}\n        onChange={evt => this.inputChangeHandler(evt)}\n      >\n        {this.props.children}\n      </input>\n    );\n  }\n}\n\nexport default FormField;\n","/*\n * Built-in FormCheck functions for FormFields\n */\nexport default class FormCheck {\n  /**\n   * @description checks if value is valid email address\n   * @param {string} email string\n   * @returns boolean\n   */\n  static email(value) {\n    return /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/.test(\n      value\n    )\n      ? false\n      : ['email', true];\n  }\n\n  /**\n   * @description checks if value is greater than or equal to max\n   * @param {number} max number\n   * @returns function\n   */\n  static max(max) {\n    return value => (value <= max ? false : ['max', { max, actual: value }]);\n  }\n\n  /**\n   * @description checks if value length is greater than or equal to maxLength\n   * @param {number} maxLength\n   * @returns function\n   */\n  static maxLength(maxLength) {\n    return value =>\n      value.length <= maxLength\n        ? false\n        : ['maxLength', { maxLength, actual: value.length }];\n  }\n\n  /**\n   * @description checks if value is less than or equal to min\n   * @param {number} min\n   * @returns function\n   */\n  static min(min) {\n    return value => (value >= min ? false : ['min', { min, actual: value }]);\n  }\n\n  /**\n   * @description checks if value length is less than or equal to minLength\n   * @param {number} minLength\n   * @returns\n   */\n  static minLength(minLength) {\n    return value =>\n      value.length >= minLength\n        ? false\n        : ['minLength', { minLength, actual: value.length }];\n  }\n\n  /**\n   * @description checks if value matches RegExp pattern\n   * @param {RegExp} pattern RegExp\n   * @returns function\n   */\n  static regex(regex) {\n    return value => (regex.test(value) ? false : ['regex', true]);\n  }\n\n  /**\n   * @description checks if any value exists\n   * @param {string} value string\n   * @returns boolean\n   */\n  static required(value) {\n    return value.trim().length > 0 ? false : ['required', true];\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport FormGroup from './form-group/FormGroup';\nimport FormField from './form-field/FormField';\nimport FormCheck from './form-check/FormCheck';\n\nclass App extends Component {\n  state = {\n    group: {\n      errors: false,\n      groupName: '',\n      valid: false,\n      value: {\n        email: '',\n        password: ''\n      }\n    },\n    email: {\n      disabled: false,\n      value: '',\n      touched: false,\n      valid: false\n    },\n    password: {\n      disabled: false,\n      errors: false,\n      value: '',\n      touched: false,\n      valid: false\n    }\n  };\n\n  formFieldChangeHandler = (formState, field) => {\n    this.setState({ [field]: formState });\n  };\n\n  formGroupChangeHandler = formState => {\n    this.setState({ group: formState });\n  };\n\n  formSubmitHandler = formState => {\n    alert(\n      `Email: ${formState.value.email} || Password: ${formState.value.password}`\n    );\n  };\n\n  displayObjectFields(object) {\n    const el = [];\n    for (const field in object) {\n      el.push(\n        <p className=\"code__indent--double\" key={field}>\n          <code>\n            {field}: {object[field] ? 'error' : String(object[field])}\n          </code>\n        </p>\n      );\n    }\n    return el;\n  }\n\n  fieldErrors(field) {\n    if (field.errors) {\n      return this.displayObjectFields(field.errors);\n    } else {\n      return (\n        <p className=\"code__indent--double\">\n          <code>false</code>\n        </p>\n      );\n    }\n  }\n\n  optionToggleHandler = (field, subfield) => {\n    this.setState(prevState => ({\n      ...prevState,\n      [field]: {\n        ...prevState[field],\n        [subfield]: !prevState[field][subfield]\n      }\n    }));\n  };\n\n  render() {\n    const { email, group, password } = this.state;\n\n    const emailError =\n      email.touched && email.errors ? (\n        <p className=\"error\">Must be a valid email address</p>\n      ) : null;\n    const passwordError =\n      password.touched && password.errors ? (\n        <p className=\"error\">Must be at least 4 characters long</p>\n      ) : null;\n\n    return (\n      <div>\n        <h1 style={{ textAlign: 'center' }}>Validus Form Demo</h1>\n        <div className=\"signup\">\n          <h2 style={{ textAlign: 'center', margin: 0 }}>Signup</h2>\n          <FormGroup\n            groupName=\"1\"\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '16px'\n            }}\n            onBlur={formState => this.formGroupChangeHandler(formState)}\n            onChange={formState => this.formGroupChangeHandler(formState)}\n            onSubmit={formState => this.formSubmitHandler(formState)}\n          >\n            <label style={{ marginLeft: '8px' }}>Email</label>\n            <FormField\n              fieldName={'email'}\n              type=\"text\"\n              style={{ margin: '8px', padding: '4px' }}\n              formCheck={[FormCheck.required, FormCheck.email]}\n              onBlur={formState =>\n                this.formFieldChangeHandler(formState, 'email')\n              }\n              onChange={formState =>\n                this.formFieldChangeHandler(formState, 'email')\n              }\n              disabled={email.disabled}\n              touched={email.touched}\n            />\n            {emailError}\n            <label style={{ marginLeft: '8px' }}>Password</label>\n            <FormField\n              fieldName={'password'}\n              style={{ margin: '8px', padding: '4px' }}\n              type=\"password\"\n              formCheck={[FormCheck.required, FormCheck.minLength(4)]}\n              onBlur={formState =>\n                this.formFieldChangeHandler(formState, 'password')\n              }\n              onChange={formState =>\n                this.formFieldChangeHandler(formState, 'password')\n              }\n              disabled={password.disabled}\n              touched={password.touched}\n            />\n            {passwordError}\n            <button type=\"submit\" disabled={!group.valid}>\n              Submit\n            </button>\n          </FormGroup>\n        </div>\n\n        <div className=\"form-state\">\n          <div>\n            <h3 style={{ textAlign: 'center' }}>Signup FormGroup</h3>\n            <div className=\"code__card\">\n              <p className=\"code__field\">\n                <code>formState = {'{'}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>errors: {'{'}</code>\n              </p>\n              {this.fieldErrors(group)}\n              <p className=\"code__indent\">{'}'}</p>\n              <p className=\"code__indent\">\n                <code>valid: {String(group.valid)}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>value: {'{'}</code>\n              </p>\n              <p className=\"code__indent--double\">\n                <code>email: {group.value.email}</code>\n              </p>\n              <p className=\"code__indent--double\">\n                <code>password: {group.value.password}</code>\n              </p>\n              <p className=\"code__indent\">{'}'}</p>\n              <p className=\"code__field\">{'}'}</p>\n            </div>\n          </div>\n\n          <div>\n            <h3 style={{ textAlign: 'center' }}>Email FormField</h3>\n            <div className=\"code__card\">\n              <p className=\"code__field\">\n                <code>formState = {'{'}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>errors: {'{'}</code>\n              </p>\n              {this.fieldErrors(email)}\n              <p className=\"code__indent\">\n                <code>value: {email.value}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>disabled: {String(email.disabled)}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>touched: {String(email.touched)}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>valid: {String(email.valid)}</code>\n              </p>\n              <p className=\"code__field\">{'}'}</p>\n            </div>\n            <button\n              onClick={() => this.optionToggleHandler('email', 'disabled')}\n            >\n              {email.disabled ? 'Enable Input' : 'Disable Input'}\n            </button>\n            <button\n              onClick={() => this.optionToggleHandler('email', 'touched')}\n            >\n              {email.touched ? 'Mark as Clean' : 'Mark as Touched'}\n            </button>\n          </div>\n\n          <div>\n            <h3 style={{ textAlign: 'center' }}>Password FormField</h3>\n            <div className=\"code__card\">\n              <code>formState = {'{'}</code>\n              <p className=\"code__indent\">\n                <code>errors: {'{'}</code>\n              </p>\n              {this.fieldErrors(password)}\n              <p className=\"code__indent\">\n                <code>value: {password.value}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>disabled: {String(password.disabled)}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>touched: {String(password.touched)}</code>\n              </p>\n              <p className=\"code__indent\">\n                <code>valid: {String(password.valid)}</code>\n              </p>\n              <p className=\"code__field\">{'}'}</p>\n            </div>\n            <button\n              onClick={() => this.optionToggleHandler('password', 'disabled')}\n            >\n              {password.disabled ? 'Enable Input' : 'Disable Input'}\n            </button>\n            <button\n              onClick={() => this.optionToggleHandler('password', 'touched')}\n            >\n              {password.touched ? 'Mark as Clean' : 'Mark as Touched'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}